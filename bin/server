#!/usr/bin/env ruby

require 'bundler/setup'

require 'logger'
require 'em-logger'
require 'thin'
require 'uri'
require 'faye'

require_relative '../lib/config'
require_relative '../lib/stats_client'
require_relative '../lib/stats_observer'
require_relative '../lib/web_server'

$PROGRAM_NAME = 'vistatv_live_dashboard'
STDOUT.sync = true

config = LiveDashboard::Config.new

dest_logger = Logger.new(STDOUT)
dest_logger.level = Logger::INFO

logger = EventMachine::Logger.new(dest_logger)

observer = LiveDashboard::StatsObserver.new(logger)

LiveDashboard::WebServer.set(:config, config)
LiveDashboard::WebServer.set(:logger, logger)
LiveDashboard::WebServer.set(:observer, observer)

EventMachine.next_tick {
  websocket = Faye::Client.new(config.faye_endpoint.url)

  observer.register('overview') do |data|
    websocket.publish('/minute', data)
  end

  host = config.stats_server.host
  port = config.stats_server.port

  EventMachine.connect(
    host, port, LiveDashboard::StatsClient, host, port, observer, logger
  )
}

EventMachine.run {
  Signal.trap("INT")  { EventMachine.stop }
  Signal.trap("TERM") { EventMachine.stop }

  hostname = config.web_server.host
  port     = config.web_server.port

  Thin::Server.start(hostname, port, signals: false) do
    Faye::WebSocket.load_adapter('thin')

    endpoint_url = URI(config.faye_endpoint.url)

    logger.info("Using Faye endpoint: #{endpoint_url}")
    use Faye::RackAdapter, mount: endpoint_url.path, timeout: 25

    run LiveDashboard::WebServer.new
  end

  logger.info("Running web server on #{hostname}:#{port}")
}
